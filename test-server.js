// Teste b√°sico do servidor
require('dotenv').config({ path: './test.env' });
const mysql = require('mysql2/promise');

async function testServer() {
  console.log('üß™ Testando configura√ß√µes do servidor...');
  
  // Testar vari√°veis de ambiente
  console.log('‚úÖ PORT:', process.env.PORT);
  console.log('‚úÖ DB_HOST:', process.env.DB_HOST);
  console.log('‚úÖ JWT_SECRET:', process.env.JWT_SECRET ? 'Configurado' : 'N√£o configurado');
  
  // Testar conex√£o com banco
  try {
    const connection = await mysql.createConnection({
      host: process.env.DB_HOST,
      port: parseInt(process.env.DB_PORT),
      user: process.env.DB_USER,
      password: process.env.DB_PASSWORD,
      database: process.env.DB_NAME
    });
    
    console.log('‚úÖ Conex√£o com banco: OK');
    
    // Testar queries b√°sicas
    const [usuarios] = await connection.execute('SELECT COUNT(*) as total FROM Usuarios WHERE status = "ativo"');
    console.log('‚úÖ Usu√°rios ativos:', usuarios[0].total);
    
    const [pacientes] = await connection.execute('SELECT COUNT(*) as total FROM Pacientes_Clinica');
    console.log('‚úÖ Total de pacientes:', pacientes[0].total);
    
    await connection.end();
    
    console.log('\nüéâ Todas as configura√ß√µes est√£o OK!');
    console.log('üí° Para iniciar o servidor, execute: npm run dev');
    
  } catch (error) {
    console.error('‚ùå Erro na conex√£o:', error.message);
  }
}

testServer();
